---
layout: post
title: How to serve static files with Express, without a templating engine
tags: Node, Express, MEAN Stack, How to
published: true
---
This example uses Express to serve static files for an Angular app, without using
an Express templating engine.

Many examples for setting up an Express server with a Node app, include
the use of Jade as a templating engine.
Which looks something like this.
INSERT
The simple case of having a single page application, here, an Angular app, was hard to
find a good example of setting up Express.

So I pieced together clues from Stack Overflow and looked at the Express API directly to
piece together a simple server setup.

One tricky part was figuring out the res.sendFile and getting the file directly and entry point file properly identified.
I had to restructure my files (i.e. get the right files in the public directory)
Here is what the files structure looks like:
{:.center}
![Angular App file structure]({{ site.baseurl }}/img/gaApp-files.jpg)

Heres what I found to use, stripped down as much as possible:

{% highlight js %}
//Use/'require' the Node module 'Express'
var express = require('express');
//Define variable app to use methods of the Express function
var app = express();
//express.static is built-in middleware to server static files, 'public' is the name of the directory
//that holds the files to published
app.use(express.static('public'));
//define a port
var port = 8000;
//the listen method binds and listens for connections on the specified host and port
app.listen(port, function() {
    console.log('app listening on port ' + port);
});
//Routes HTTP GET requests to the specified path with the specified callback functions
//here '*' is the path we want to get, which is a catch-all route
//since we have a single page application (SPA) architecture, we are using Angular
//to do the routing and we just need the Express server to have a single entry point into the
//application, which is through the index.html file
app.get('*', function(req, res) {
    //__dirname is a special word to access the local file + public/index.html is the
    //directory for the published files
    //the sendFile method transfers the file that is the single point of entry
    //Transfers the file at the given path.
    res.sendFile(__dirname + "/public/index.html");
});
{% endhighlight js %}
